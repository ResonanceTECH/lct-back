services:
    lct_server:
        container_name: lct_server
        build:
            context: .
            dockerfile: Dockerfile
        env_file:
            - .env
        command: npm run start:prod
        ports:
            - "${APP_PORT}:3000"
        restart: unless-stopped
        labels:
            - io.portainer.accesscontrol.teams=LCT
        networks:
            - lct-net

    lct_postgres:
        image: postgres:14-alpine
        container_name: lct_postgres
        restart: always
        volumes:
            - lct-postgres:/var/lib/postgresql/data
            - ./postgresql.conf:/etc/postgresql/postgresql.conf
        environment:
            - POSTGRES_USER=$PG_USER
            - POSTGRES_PASSWORD=$PG_PASSWORD
            - POSTGRES_DB=$DB_NAME
        ports:
            - ${PG_PORT}:5432
        labels:
            - io.portainer.accesscontrol.teams=LCT
        networks:
            - lct-net

    lct_redis:
        image: redis:7-alpine
        container_name: lct_redis
        restart: unless-stopped
        command: redis-server --replica-read-only no
        volumes:
            - /var/devops/lct/redis:/data
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - lct-net
        labels:
            - io.portainer.accesscontrol.teams=LCT

    lct_minio:
        image: minio/minio:latest
        container_name: lct_minio
        restart: unless-stopped
        command: server /data --console-address ":9001"
        ports:
            - "${S3_PORT}:9000"
            - "${S3_GUI_PORT}:9001"
        volumes:
            - /var/devops/minio-data:/data
            - /var/devops/minio-config:/root/.minio
        environment:
            - MINIO_ROOT_USER=$S3_ROOT_USER
            - MINIO_ROOT_PASSWORD=$S3_ROOT_PASSWORD
        labels:
            - io.portainer.accesscontrol.teams=LCT

networks:
    lct-net:
        driver: bridge

volumes:
    lct-postgres:
        name: lct-postgres
